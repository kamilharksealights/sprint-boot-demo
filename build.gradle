buildscript {
	repositories {
		google()
		mavenLocal()
		maven {
			credentials {
				username "sealights"
				password "s2015l"
			}
			url "http://nex.sealights.co:8081/repository/sealights-internal"
			allowInsecureProtocol true
		}
	}
	dependencies {
		def sealightsGradlePluginVersion = "3.1.690"
		classpath("io.sealights.on-premise.agents.plugin:sealights-gradle-plugin:${sealightsGradlePluginVersion}")
	}
}


plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = "spring-boot-demo.jar"
}

allprojects.each { p ->

	def included = []
	def excluded = []

	if (!excluded.contains(p.name) && (included.isEmpty() || included.contains(p.name))) {
		p.afterEvaluate {
			p.apply plugin: io.sealights.onpremise.agents.plugin.SealightsPlugin
			p.sealights {
				token=System.getProperty("token")
				appName="demo"
				packagesIncluded="com.example.*"
				recursive=true
				includeResources=true
				logEnabled=true
				logLevel='info'
				logPluginMinimal=false
				createBuildSessionId=true
				sealightsJvmParams=["sl.httpMaxAttempts" : "3", "sl.tia.enable" : "true", "sl.featuresData.ignoreAutoGeneratedMethods" : "true", "sl.footprintsEnableV6" : true]
				logToConsole=true
				build=System.getProperty("buildName")
				branch="master"
				customerid="SeaLights"
			}
		}

	}
}